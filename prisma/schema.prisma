
datasource db {
  provider = "postgresql"
  url      = env("POSTGRESQL_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}


enum RoleEnum {
  Admin
  Regular
  Staff
}

enum AuthFlowEnum {
  Basic
  GoogleOAuth
  FacebookOAuth
  LinkedInOAuth
  AppleOAuth
}

enum AccountTypeEnum {
  free
  bronze
  silver
  gold
  ultimate
}

model UserPreference {
  id String @id @unique @default(uuid())
  userId String @unique
  user User @relation("UserPreferenceToUser", fields: [userId], references: [id])
  theme String @default("lara")
  language String @default("en")
  notifications Json
  createdAt DateTime?
  updatedAt DateTime?
}

model User {
  id String @id @unique @default(uuid())
  name String
  role RoleEnum @default(Regular)
  authFlow AuthFlowEnum @default(Basic)
  email String @unique
  password String?
  address String?
  phone String?
  salt String?
  unsubscribed Boolean @default(false)
  refreshTokens Json[]
  accountType AccountTypeEnum @default(free)
  isManuallyControlledPremiumAccount Boolean @default(false)
  pushNotificationToken String?
  channel String?
  createdAt DateTime?
  updatedAt DateTime?
  userPreference UserPreference? @relation("UserPreferenceToUser")
}

model Log {
  id String @id @unique @default(uuid())
  action String
  emitter String
  target String
  createdAt DateTime?
  updatedAt DateTime?
}

model ABTest {
  id String @id @unique @default(uuid())
  name String
  slug String
  description String
  enabled Boolean @default(true)
  createdAt DateTime?
  updatedAt DateTime?
}