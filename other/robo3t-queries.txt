FETCH CRYSTALS BY CHAR NAME

db.items.aggregate([
  {
    $match: { key: "social-crystal" }
  },
  {
    $lookup: {
      from: "characters",
      localField: "owner",
      foreignField: "_id",
      as: "characterInfo"
    }
  },
  {
    $unwind: "$characterInfo"
  },
  {
    $group: {
      _id: "$owner",
      characterName: { $first: "$characterInfo.name" },
      totalSocialCrystals: { $sum: "$stackQty" }
    }
  },
  {
    $sort: { totalSocialCrystals: -1 }
  },
  {
    $project: {
      _id: 0,
      characterName: 1,
      totalSocialCrystals: 1
    }
  }
])


FIND POTENTIAL ITEM BUGGERS


db.items.aggregate([
  // Match items with defense greater than 300
  {
   $match: {
      $or: [
        { defense: { $gt: 500 } },
        { attack: { $gt: 500 } }
      ]
    }
  },
  // Lookup to join with the characters collection
  {
    $lookup: {
      from: "characters",
      localField: "owner",
      foreignField: "_id",
      as: "ownerInfo"
    }
  },
  // Unwind the ownerInfo array
  {
    $unwind: "$ownerInfo"
  },
  // Group by owner name
  {
    $group: {
      _id: "$ownerInfo.name",
      items: {
        $push: {
          itemId: "$_id",
          itemName: "$name",
          defense: "$defense"
        }
      },
      count: { $sum: 1 }
    }
  },
  // Sort by the number of bugged items in descending order
  {
    $sort: { count: -1 }
  }
])
