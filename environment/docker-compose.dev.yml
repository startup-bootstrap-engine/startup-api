version: "3"
services:
  rpg-api:
    container_name: rpg-api
    restart: always
    build: .
    env_file: .env
    ports:
      - "$SERVER_PORT:$SERVER_PORT"
      - "9229:9229" # debugging port
      - "$SOCKET_PORT:$SOCKET_PORT"
      - "$SOCKET_UDP_RANGE"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      FORCE_COLOR: "true"
      CHOKIDAR_USEPOLLING: "true" # enables hot-reloading on windows host
      NEW_RELIC_LICENSE_KEY: "${NEW_RELIC_LICENSE_KEY}"
      NEW_RELIC_APP_NAME: "Definya API Dev"
    links:
      - rpg-db
    depends_on:
      - rpg-db
      - rpg-redis
    networks:
      - rpg-network
      - rpg-api-rpg-npc

  rpg-npc:
    container_name: rpg-npc
    restart: always
    build: .
    env_file: .env
    ports:
      - "5005:5005"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      MICROSERVICE_NAME: "rpg-npc"
      FORCE_COLOR: "true"
      CHOKIDAR_USEPOLLING: "true" # enables hot-reloading on windows host
      NEW_RELIC_LICENSE_KEY: "${NEW_RELIC_LICENSE_KEY}"
      NEW_RELIC_APP_NAME: "Definya API Dev"
    links:
      - rpg-db
    depends_on:
      - rpg-api
      - rpg-db
      - rpg-redis
    networks:
      - rpg-api-rpg-npc
      - rpg-network

  rpg-pathfinder:
    container_name: rpg-pathfinder
    build:
      context: ./microservices/rpg-pathfinder
      dockerfile: Dockerfile
    ports:
      - "5004:5004"
    volumes:
      - ./microservices/rpg-pathfinder:/app
    environment:
      - GO111MODULE=on
    command: air
    networks:
      - rpg-network

  rpg-db:
    container_name: rpg-db
    image: mongo
    restart: always
    command: mongod --port ${MONGO_PORT}
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - ./docker_scripts/:/docker-entrypoint-initdb.d
    ports:
      - "$MONGO_PORT:$MONGO_PORT"
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_PORT: ${MONGO_PORT}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - rpg-network
  rpg-redis:
    container_name: rpg-redis
    restart: always
    image: redis:latest
    ports:
      - "$REDIS_PORT:$REDIS_PORT"
    expose:
      - "$REDIS_PORT"
    env_file: .env
    volumes:
      - ./config/redis.conf:/redis.conf
    command: ["redis-server", "/redis.conf", "--port", "${REDIS_PORT}"]
    networks:
      - rpg-network

  redis-commander:
    container_name: redis-commander
    restart: always
    image: rediscommander/redis-commander:latest
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: "redis:rpg-redis:6380"
    networks:
      - rpg-network

networks:
  rpg-network:
  rpg-api-rpg-npc:
    driver: overlay
    internal: true
